# Powerline
source ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf

# Set the terminal to 256 colors
#set -g terminal-overrides 'xterm:colors=256'
set-option -g default-terminal "screen-256color"
set-option -g default-shell /bin/bash

# enable utf-8 on status bar
set -g status on
set -g status-utf8 on

# powerline colors
set -g status-style fg=colour231,bg=colour234

# System clipboard
#set-option -g default-command "reattach-to-user-namespace -l bash"

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Address vim mode switching delay (http://superuser.com/a/252717/65504 & https://mutelight.org/practical-tmux)
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Set vi mode for copy mode
setw -g mode-keys vi

# Reload tmux config
bind r source-file ${HOME}/.tmux.conf \; display-message "source-file reloaded"

# Change default default prefix (ctrl+b) to ctrl+space
unbind C-b
set -g prefix C-Space
bind Space send-prefix # (don't know if this is actually working)

# Set prefix then ctrl+a to open the last window viewed
# bind C-a last-window

# Set prefix then space to go into copy-mode (remember q takes you out of copy-mode)
bind Space copy-mode
bind C-Space copy-mode

# Set prefix then j to split window vertically 
bind j split-window -v
bind C-j split-window -v

# Set prefix then l to split window horizontally
bind l split-window -h
bind C-l split-window -h

# Set prefix then k to kill the current pane 
bind k kill-pane
bind C-k kill-window

# This is actually really cool
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Smart pane switching with awareness of vim splits
# This is actually really cool
# ctrl+h goes to the pane to the left
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"

# ctrl+j goes to the pane below
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"

# ctrl+k goes to the pane above
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"

# ctrl+l goes to the pane to the right
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"

# previous pane (i think) ?
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\'') || tmux select-pane -l"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'

run '~/.tmux/plugins/tpm/tpm'
